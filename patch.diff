From 798868b5e3539378446be93d9a5ea3497c3c8242 Mon Sep 17 00:00:00 2001
From: bob <130830376+zapabob@users.noreply.github.com>
Date: Fri, 21 Apr 2023 12:32:44 +0900
Subject: [PATCH] no message

---
 PythonResearchChemicaldrug.py | 46 +++++++++--------------------------
 1 file changed, 11 insertions(+), 35 deletions(-)

diff --git a/PythonResearchChemicaldrug.py b/PythonResearchChemicaldrug.py
index 15f339d..26cb5df 100644
--- a/PythonResearchChemicaldrug.py
+++ b/PythonResearchChemicaldrug.py
@@ -1,12 +1,10 @@
 import os
-import time
-import random
-import requests
 import tkinter as tk
 from tkinter import messagebox
 from rdkit import Chem
 from selenium import webdriver
 import pandas as pd
+import time
 
 def iupac_to_smiles(iupac):
     mol = Chem.MolFromSmiles(iupac)
@@ -18,21 +16,21 @@ def get_adme_data(smiles):
     # 1.5分待機する
     time.sleep(90)
     # ランダムにプロキシを選択する
-    proxies = [
-        {'http':'43.157.66.170:8080'} HTTP-HTTPS	Lvl3	Japan country logo Japan	Tokyo		1m｝
-       {'http' :'139.162.78.109:8080'}HTTP-HTTPS	Lvl3	Japan country logo Japan	Tokyo		4m｝
-        {'http' :'43.153.222.203:8080'｝	HTTP-HTTPS	Lvl3	}
-        {'http': '43.138.216.160:8080'｝        Japan country logo Japan	Tokyo		13m｝
-          {'http':'43.135.182.214:8080'｝	HTTP-HTTPS	Lvl3 Japan country logo Japan	Tokyo		5h}	
+    proxies = [ 
+         { 'http' : '43.157.66.170:8080' }
+        ,{ 'http' : '139.162.78.109:8080' }
+        ,{ 'https' : '43.153.222.203:8080' }
+        ,{ 'https' : '43.138.216.160:8080' }
+        ,{ 'https' : '43.135.182.214:8080' }	
 
     ]
     proxy = random.choice(proxies)
     # プロキシを使用してSwissADMEにアクセスする
     r = requests.get('http://www.swissadme.ch/', params={'proxy': proxy, 'SMILES': smiles})
-    # 結果を取得した後30s待機する
-    adme_data ='SwissADME.csv'
+    # 結果を取得するまで30秒待機
     time.sleep(30)
-    return adme_data
+adme_data ='SwissADME.csv'
+return adme_data
 
 def get_ki_data(adme_data):
     # 各モノアミン受容体への半数阻害効果定数、半数効果濃度定数を取得する
@@ -58,26 +56,4 @@ def button_click():
     ec50_data = get_ec50_data(adme_data)
     result_text.configure(state='normal')
     result_text.delete(1.0, tk.END)
-    result_text.insert(tk.END, f'SMILES: {smiles}\n\nDAT:\n  Ki: {ki_data["DAT"]} nM\n  EC50: {ec50_data["DAT"]} nM\n\nNAT:\n  Ki: {ki_data["NAT"]} nM\n  EC50: {ec50_data["NAT"]} nM\n\nSERT:\n  Ki: {ki_data["SERT"]} nM\n  EC50: {ec50_data["SERT"]} nM')
-    result_text.configure(state='disabled')
-    adme_data.to_csv(os.path.expanduser("~/Desktop/My.csv"), index=False)
-
-# GUIアプリケーションのウィンドウを作成する
-root = tk.Tk()
-root.title('ADME Data')
-
-# IUPAC名を入力するためのテキストボックスを作成し、ウィンドウ上に配置する
-iupac_entry = tk.Entry(root, width=40)
-iupac_entry.pack(pady=10)
-
-# ボタンを作成し、ウィンドウ上に配置する
-button = tk.Button(root, text='Get ADME Data', command=button_click)
-button.pack(pady=10)
-
-# 結果を表示するためのテキストボックスを作成し、ウィンドウ上に配置する
-result_text = tk.Text(root, width=80, height=20, state='disabled')
-result_text.pack(pady=10)
-
-# GUIアプリケーションを実行する
-root.mainloop()
-
+    result_text.insert(tk.END, {SMILES: {smiles} \Ki:\DAT: {ki_data["DAT"]}\NAT: {ki_data["NAT"]}\SERT: {ki_data["SERT"]}\EC50:\DAT: {ec50_data["DAT"]}\NAT: {ec50_data["NAT"]}\S\NAT: {ki_data["NAT"]}\SERT: {ki_data["SERT"]}EC50:DAT: {ec50_data["DAT"]NAT: {ec50_data["NAT"]}S_data["NAT"]}SERT: {ki_data["SERT"]}EC50:DAT: {ec50_data["DAT"]}NAT: {ec50_data["NAT"]}S
-- 
2.40.0.windows.1

